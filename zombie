#include "Library.c"

task main()
{
	SensorType[Light] = sensorLightActive;
	SensorType[Sonar] = sensorSONAR;
	delay(100);
	int i = 0;
	int X;
	int Y;
	int farthest = 80;

	while(i<4)
		//While Sonar Sensor does not see silver
	//while (SensorType[S3] < silverThresh)
	{
		//Check if Ultrasonic sensor sees object
		if (SensorValue[Sonar] <=farthest)
		{
			int dist = SensorValue[Sonar];
			X = (nMotorEncoder[Lm]/EncPerCm);
			Y = dist;
			Stop();
			playSound(soundBeepBeep);
			displayBigTextLine(1, "%d", dist);
			displayBigTextLine(3, "%d", nMotorEncoder[Lm]);
			wait1Msec(2000);

			/*Set the distance. The way this works is that when the ultrasonic sensor sees the zombie,
			set the value of the zombie, and then check until it sees somthing greater then that distance.
			When it does see somthing greater then that distance, repeat the loop, because it means that the robot passed the zombie*/

			//while it sees zombie line trace
			//while(SensorValue[Sonar] <=dist+3)
			//{
			//	MoveForward();
			//	//LineTrace();
			//}

			MotorEncoderReset();
			displayBigTextLine(3, "%d", nMotorEncoder[Lm]);
			playSound(soundDownwardTones);
			wait1Msec(2000);
			
			MoveForward();
			wait1Msec(500);

			while(SensorValue[Sonar] < dist)
			{
				dist = SensorValue[Sonar];
				displayBigTextLine(1, "%d", dist);
				displayBigTextLine(3, "%d", nMotorEncoder[Lm]);
				MoveForward();
				wait1Msec(500);
			}
			Stop();
			playSound(soundUpwardTones);
			wait1Msec(2000);
			displayBigTextLine(3, "%d", nMotorEncoder[Lm]);
			GoForward(nMotorEncoder[Lm]);
			Stop();
			displayBigTextLine(3, "%d", nMotorEncoder[Lm]);
			playSound(soundLowBuzz);
			wait1Msec(2000);

			int A = X-15;
			int B = Y-25;
			//Displays
			//displayTextLine(i,"x=%d y=%d", X, Y);
			//drawEllipse(A-5,B+5,A+5,B-5);
			i++;
		}
		//If it sees nothing, line trace
		else
		{
			MoveForward();
			//LineTrace();
		}
	}
	Stop();
	wait1Msec(5000);
}
